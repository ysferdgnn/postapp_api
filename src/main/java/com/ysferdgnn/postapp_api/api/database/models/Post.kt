package com.ysferdgnn.postapp_api.api.database.models

import com.fasterxml.jackson.annotation.JsonIgnore
import io.swagger.annotations.ApiModel
import io.swagger.annotations.ApiModelProperty
import com.ysferdgnn.postapp_api.api.database.models.Users
import com.ysferdgnn.postapp_api.api.database.models.Likes
import java.io.Serializable
import javax.persistence.*

@Entity
@Table(name = "Post")
@ApiModel(value = "Post Model")
data class Post  (
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    @ApiModelProperty(value = "Post model autogenerated Id value")
    val id: Long? =null,

    @Column(name = "title")
    @ApiModelProperty(value = "Post model title value for describe post content")
    val title: String?=null,

    @Column(name = "text", length = 500)
    @ApiModelProperty(value = "Post model content text")
    val text: String?=null,

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "usersid", nullable = false)
    @JsonIgnore
    val users: Users?=null,

    @OneToMany(fetch = FetchType.LAZY, cascade = [CascadeType.ALL], mappedBy = "post")
    @JsonIgnore
    val likes: List<Likes>? = null,

    @OneToMany(fetch = FetchType.LAZY, cascade = [CascadeType.ALL], mappedBy = "post")
    @JsonIgnore
    val comments: List<Comment>? = null
) {
    constructor(id: Long?, Title: String, Text: String, user: Users) : this(id,Title,Text,user,null,null) {

    }
}