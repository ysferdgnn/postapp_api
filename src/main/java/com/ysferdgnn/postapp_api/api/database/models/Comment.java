package com.ysferdgnn.postapp_api.api.database.models;


import com.fasterxml.jackson.annotation.JsonIgnore;
import com.ysferdgnn.postapp_api.api.requests.CommentPostRequest;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;

import javax.persistence.*;
import java.io.Serializable;

@Entity
@Table(name = "Comment")
@ApiModel(value = "Comment Model")
@Data
public class Comment implements Serializable {

    public static  Comment createCommentFromCommentPostRequest(CommentPostRequest commentPostRequest,Users users){
        Comment comment = new Comment();
        comment.setPostId(commentPostRequest.getPostId());
        comment.setUsers(users);
        comment.setText(commentPostRequest.getText());
        return  comment;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    @ApiModelProperty(value = "Comment model autogenerated Id value")
    private Long id;

//    @Column(name = "usersId",nullable = false)
//    @ApiModelProperty(value = "User Id for describe who commented post")
//    private Long usersId;

    @Column(name = "postId",nullable = false)
    @ApiModelProperty(value = "Post Id for describe which post commented")
    private Long postId;

    @Column(name = "text",length = 500)
    @ApiModelProperty(value = "define post content")
    private String text;

    @ManyToOne(fetch = FetchType.LAZY,cascade = CascadeType.ALL)
    @JoinColumn(name = "usersId",nullable = false)
    private Users users;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "postId",insertable = false,updatable = false,nullable = false)
    @JsonIgnore
    @OnDelete(action = OnDeleteAction.CASCADE)
    private Post post;



}
